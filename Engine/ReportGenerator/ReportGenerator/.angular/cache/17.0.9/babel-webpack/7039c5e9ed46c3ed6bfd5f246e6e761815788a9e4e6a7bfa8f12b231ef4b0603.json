{"ast":null,"code":"import { CustomResultType } from \"../../database/tables.service\";\nimport { MessageService } from \"primeng/api\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nconst _c0 = [\"itemTemplate\"];\nfunction RelatedEntitiesComponent_ng_template_4_ng_template_0_Template(rf, ctx) {}\nconst _c1 = a0 => ({\n  $implicit: a0\n});\nfunction RelatedEntitiesComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, RelatedEntitiesComponent_ng_template_4_ng_template_0_Template, 0, 0, \"ng-template\", 3);\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, item_r1));\n  }\n}\nconst _c2 = () => ({\n  \"height\": \"300px\"\n});\nexport let RelatedEntitiesComponent = /*#__PURE__*/(() => {\n  class RelatedEntitiesComponent {\n    /*\n      @Output()\n      onSubmitEnd: EventEmitter<any> = new EventEmitter<any>();*/\n    constructor(messageService) {\n      this.messageService = messageService;\n      this.loading = false;\n      this.msgs = [];\n    }\n    ngOnInit() {\n      this.sourceModels = [];\n      this.targetModels = [];\n      this.reload();\n    }\n    save() {\n      this.loading = true;\n      this.service.save({\n        oneId: this.oneId,\n        sourceModels: this.sourceModels,\n        targetModels: this.targetModels\n      }).toPromise().then(result => {\n        this.loading = false;\n        if (result.Status == CustomResultType.success) {\n          this.reload();\n          this.msgs = [];\n          this.msgs.push({\n            severity: 'success',\n            summary: 'پیغام',\n            detail: 'با موفقیت ثبت شد'\n          });\n          //this.messageService.add({severity:'success', summary: 'پیغام', detail: 'با موفقیت ثبت شد' , sticky:true});\n        }\n      }).catch(s => {\n        this.loading = false;\n      });\n    }\n    reload() {\n      this.loading = true;\n      this.service.get(this.oneId).toPromise().then(result => {\n        this.loading = false;\n        if (result.Status == CustomResultType.success) {\n          this.sourceModels = result.result.sourceModels;\n          this.targetModels = result.result.targetModels;\n        }\n      }).catch(s => {\n        this.loading = false;\n      });\n    }\n    submit() {\n      this.save();\n    }\n    static #_ = this.ɵfac = function RelatedEntitiesComponent_Factory(t) {\n      return new (t || RelatedEntitiesComponent)(i0.ɵɵdirectiveInject(i1.MessageService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RelatedEntitiesComponent,\n      selectors: [[\"app-related-entities\"]],\n      contentQueries: function RelatedEntitiesComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, _c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);\n        }\n      },\n      inputs: {\n        service: \"service\",\n        sourceHeader: \"sourceHeader\",\n        targetHeader: \"targetHeader\",\n        targetFilterPlaceholder: \"targetFilterPlaceholder\",\n        sourceFilterPlaceholder: \"sourceFilterPlaceholder\",\n        oneId: \"oneId\",\n        oneTitle: \"oneTitle\",\n        manyTitle: \"manyTitle\",\n        filterBy: \"filterBy\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageService])],\n      decls: 5,\n      vars: 15,\n      consts: [[\"showTransitionOptions\", \"300ms ease-out\", 3, \"value\", \"valueChange\"], [\"dragdrop\", \"true\", 3, \"source\", \"target\", \"sourceHeader\", \"targetHeader\", \"responsive\", \"filterBy\", \"sourceFilterPlaceholder\", \"targetFilterPlaceholder\", \"sourceStyle\", \"targetStyle\"], [\"pTemplate\", \"item\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n      template: function RelatedEntitiesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p-messages\", 0);\n          i0.ɵɵlistener(\"valueChange\", function RelatedEntitiesComponent_Template_p_messages_valueChange_0_listener($event) {\n            return ctx.msgs = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(1, \"h4\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p-pickList\", 1);\n          i0.ɵɵtemplate(4, RelatedEntitiesComponent_ng_template_4_Template, 1, 4, \"ng-template\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"value\", ctx.msgs);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate2(\" \\u0645\\u062F\\u06CC\\u0631\\u06CC\\u062A \", ctx.manyTitle, \" \\u0628\\u0631\\u0627\\u06CC \", ctx.oneTitle, \"\\n\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"source\", ctx.sourceModels)(\"target\", ctx.targetModels)(\"sourceHeader\", ctx.sourceHeader)(\"targetHeader\", ctx.targetHeader)(\"responsive\", true)(\"filterBy\", ctx.filterBy)(\"sourceFilterPlaceholder\", ctx.sourceFilterPlaceholder)(\"targetFilterPlaceholder\", ctx.targetFilterPlaceholder)(\"sourceStyle\", i0.ɵɵpureFunction0(13, _c2))(\"targetStyle\", i0.ɵɵpureFunction0(14, _c2));\n        }\n      }\n    });\n  }\n  return RelatedEntitiesComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}